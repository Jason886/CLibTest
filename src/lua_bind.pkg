$#include "test.h"

void LOG_I(char *text);
void LOG_W(char *text);
void LOG_E(char *text);
void LOG(char *text);


typedef struct {
        FILE *fp;
        void *readBuf;
        int bufSize;
        int nRead;
} File_t;

File_t *File_Load(char *path, char *mod);
File_t *File_Open(char *path, char *mod, int bufSize);
void File_Close(File_t *f);
int File_Read(File_t *f);
int File_Write(File_t *f, void *data, int nWrite);
int File_WriteText(File_t *f, char *text);


struct aiengine * aiengine_new(const char *cfg);
int aiengine_delete(struct aiengine *engine);
int aiengine_start(struct aiengine *engine, const char *param, char id[64], aiengine_callback callback, const void *usrdata);
int aiengine_feed(struct aiengine *engine, const void *data, int size);
int aiengine_stop(struct aiengine *engine);